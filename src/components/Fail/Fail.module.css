/* /!\ You need to add vendor prefixes in order to render the CSS properly (or simply use http://leaverou.github.io/prefixfree/) /!\ */
#fail {
  perspective: 800px;
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 100%;
  background: transparent;
  font-size: 125%;
}
.scene,
.shape,
.face,
.faceWrapper,
.cr {
  position: absolute;
  transform-style: preserve-3d;
}
.scene {
  z-index: -1;
  position: absolute;
  font-size: 14px;
  top: -120px;
  /* width: 80em;
  height: 80em; */
  /* 62vh */
  /* transform: translateY(25px); */
  /* left: 50%; */
  /* margin: -40em 0 0 -40em; */
  transform: rotateX(355deg) rotateY(337deg);
  animation: spin 2s infinite linear;
}

@keyframes spin {
  0% {
    transform: rotateY(341deg);
  }
  100% {
    transform: rotateY(-20deg);
  }
}

.shape {
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  transform-origin: 50%;
}
.face,
.faceWrapper {
  overflow: hidden;
  transform-origin: 0 0;
  backface-visibility: hidden;
  /* hidden by default, prevent blinking and other weird rendering glitchs */
}
.face {
  background-size: 100% 100% !important;
  background-position: center;
}
.faceWrapper .face {
  left: 100%;
  width: 100%;
  height: 100%;
}
.photonShader {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}
.side {
  left: 50%;
}
.cr,
.cr .side {
  height: 100%;
}
.cubano .ft,
.cubano .bk {
  width: 100%;
  height: 100%;
}
.cubano .bk {
  left: 100%;
}
.cubano .rt {
  transform: rotateY(-90deg) translateX(-50%);
}
.cubano .lt {
  transform: rotateY(90deg) translateX(-50%);
}
.cubano .tp {
  transform: rotateX(90deg) translateY(-50%);
}
.cubano .bm {
  transform: rotateX(-90deg) translateY(-50%);
}
.cubano .lt {
  left: 100%;
}
.cubano .bm {
  top: 100%;
}
/* .cub1 styles */
.cub1 {
  transform: translate3D(0em, 0em, 0em) rotateX(180deg) rotateY(0deg)
    rotateZ(50deg);
  opacity: 1;
  width: 1.5em;
  height: 10em;
  margin: -5em 0 0 -0.75em;
}
.cub1 .ft {
  transform: translateZ(0.7272727272727273em);
}
.cub1 .bk {
  transform: translateZ(-0.7272727272727273em) rotateY(180deg);
}
.cub1 .rt,
.cub1 .lt {
  width: 1.4545454545454546em;
  height: 10em;
}
.cub1 .tp,
.cub1 .bm {
  width: 1.5em;
  height: 1.4545454545454546em;
}
.cub1 .face {
  background-color: #ffffff;
}
.cub1 .ft {
  background-color: #d20000;
}
.cub1 .bk {
  background-color: #d20000;
}
.cub1 .tp {
  background-color: #a0000a;
}
.cub1 .bm {
  background-color: #a0000a;
}
.cub1 .lt {
  background-color: #640005;
}
.cub1 .rt {
  background-color: #640005;
}
/* .cub2 styles */
.cub2 {
  transform: translate3D(0em, 0em, 0em) rotateX(0deg) rotateY(0deg)
    rotateZ(-50deg);
  opacity: 1;
  width: 10em;
  height: 1.5em;
  margin: -0.75em 0 0 -5em;
}
.cub2 .ft {
  transform: translateZ(0.7272727272727273em);
}
.cub2 .bk {
  transform: translateZ(-0.7272727272727273em) rotateY(180deg);
}
.cub2 .rt,
.cub2 .lt {
  width: 1.4545454545454546em;
  height: 1.5em;
}
.cub2 .tp,
.cub2 .bm {
  width: 10em;
  height: 1.4545454545454546em;
}
.cub2 .face {
  background-color: #fff;
}
.cub2 .ft {
  background-color: #d20000;
}
.cub2 .bk {
  background-color: #d20000;
}
.cub2 .tp {
  background-color: #640005;
}
.cub2 .bm {
  background-color: #640005;
}
.cub2 .lt {
  background-color: #a0000a;
}
.cub2 .rt {
  background-color: #a0000a;
}
.cub2 .ft {
  width: 10em;
  margin-left: 0em;
}
.cub2 .bk {
  width: 10em;
  margin-left: 0em;
}
.cub2 .rt,
.cub2 .lt {
  width: 1.4545454545454546em;
}
.cub2 .tp,
.cub2 .bm,
.cub2 .tp .photonShader,
.cub2 .bm .photonShader {
  border-radius: 0em;
}
.cub2 .cr {
  width: 0em;
  left: 0em;
}
.cub2 .cr0 {
  transform: translate3D(10em, 0, 0.7272727272727273em);
}
.cub2 .cr1 {
  transform: translate3D(10em, 0, -0.7272727272727273em);
}
.cub2 .cr2 {
  transform: translate3D(0, 0, -0.7272727272727273em);
}
.cub2 .cr3 {
  transform: translate3D(0, 0, 0.7272727272727273em);
}
.cub2 .cr0 .s0 {
  transform: rotateY(15deg) translate3D(-50%, 0, -0.025em);
}
.cub2 .cr0 .s1 {
  transform: rotateY(45deg) translate3D(-50%, 0, -0.025em);
}
.cub2 .cr0 .s2 {
  transform: rotateY(75deg) translate3D(-50%, 0, -0.025em);
}
.cub2 .cr1 .s0 {
  transform: rotateY(105deg) translate3D(-50%, 0, -0.025em);
}
.cub2 .cr1 .s1 {
  transform: rotateY(135deg) translate3D(-50%, 0, -0.025em);
}
.cub2 .cr1 .s2 {
  transform: rotateY(165deg) translate3D(-50%, 0, -0.025em);
}
.cub2 .cr2 .s0 {
  transform: rotateY(195deg) translate3D(-50%, 0, -0.025em);
}
.cub2 .cr2 .s1 {
  transform: rotateY(225deg) translate3D(-50%, 0, -0.025em);
}
.cub2 .cr2 .s2 {
  transform: rotateY(255deg) translate3D(-50%, 0, -0.025em);
}
.cub2 .cr3 .s0 {
  transform: rotateY(285deg) translate3D(-50%, 0, -0.025em);
}
.cub2 .cr3 .s1 {
  transform: rotateY(315deg) translate3D(-50%, 0, -0.025em);
}
.cub2 .cr3 .s2 {
  transform: rotateY(345deg) translate3D(-50%, 0, -0.025em);
}
.cub2 .side {
  width: 0.025em;
}
